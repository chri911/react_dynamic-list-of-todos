{"version":3,"sources":["api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["url","usersFromServer","fetch","then","response","json","result","data","TodoList","state","visibleTodos","todos","title","select","findMatchedTodos","setState","prevState","filter","todo","includes","changeHandleOnSelect","event","target","value","name","completed","changeHandle","selectUser","this","props","className","type","onChange","placeholder","map","classNames","key","id","readOnly","checked","onClick","userId","React","Component","CurrentUser","user","person","prevProps","email","phone","clearUser","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d904f480.chunk.js","sourcesContent":["const url = 'https://mate-api.herokuapp.com/';\n\nexport const todosFromServer = () => fetch(`${url}todos`)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const usersFromServer = () => fetch(`${url}users`)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { todosFromServer } from '../../api';\n\nexport class TodoList extends React.Component {\n  state = {\n    visibleTodos: [],\n    todos: [],\n    title: '',\n    select: 'all',\n  }\n\n  componentDidMount() {\n    todosFromServer()\n      .then(todo => this.setState({\n        visibleTodos: todo,\n        todos: todo,\n      }));\n  }\n\n  findMatchedTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.visibleTodos.filter(\n        todo => todo.title && todo.title.includes(prevState.title),\n      ),\n    }));\n  }\n\n  changeHandleOnSelect = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n\n    switch (value) {\n      case 'active':\n        this.setState(prevState => ({\n          todos: prevState.visibleTodos.filter(todo => !todo.completed),\n        }));\n        break;\n      case 'completed':\n        this.setState(prevState => ({\n          todos: prevState.visibleTodos.filter(todo => todo.completed),\n        }));\n        break;\n      default:\n        this.setState(prevState => ({\n          todos: prevState.visibleTodos,\n        }));\n    }\n  };\n\n  changeHandle = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n    this.findMatchedTodos();\n  };\n\n  render() {\n    const { selectUser } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.changeHandle}\n            placeholder=\"title\"\n          />\n\n          <select\n            type=\"text\"\n            name=\"select\"\n            value={this.state.select}\n            onChange={this.changeHandleOnSelect}\n          >\n            <option>all</option>\n            <option>active</option>\n            <option>completed</option>\n          </select>\n\n          <ul className=\"TodoList__list\">\n\n            {this.state.todos.map(todo => (\n              <li\n                className={classNames(\n                  'TodoList__item TodoList', {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  },\n                )}\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly checked={todo.completed} />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usersFromServer } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: '',\n  }\n\n  componentDidMount() {\n    usersFromServer()\n      .then(result => this.setState({\n        user: result.filter(person => person.id === this.props.userId),\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      usersFromServer()\n        .then(result => this.setState({\n          user: result.filter(person => person.id === this.props.userId),\n        }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {this.props.userId}\n          </span>\n        </h2>\n\n        {this.state.user\n        && (\n        <>\n          <h3 className=\"CurrentUser__name\">{this.state.user[0].name}</h3>\n          <p className=\"CurrentUser__email\">{this.state.user[0].email}</p>\n          <p className=\"CurrentUser__phone\">{this.state.user[0].phone}</p>\n          <button\n            type=\"button\"\n            onClick={this.props.clearUser}\n            className=\"button\"\n          >\n            Clear\n          </button>\n        </>\n        )\n        }\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    selectedUserId: 0,\n  };\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  selectUser = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList selectUser={this.selectUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clearUser={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}