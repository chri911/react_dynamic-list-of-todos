{"version":3,"sources":["api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["url","TodoList","state","todos","visibleTodos","title","select","updateTodosInState","setState","prevState","filter","todo","includes","filterTodos","event","target","value","name","completed","findMatchedTodos","fetch","then","response","json","result","data","selectUser","this","props","className","type","onChange","placeholder","map","classNames","key","id","readOnly","checked","onClick","userId","React","Component","CurrentUser","user","users","person","prevProps","email","phone","clearUser","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c3b49bb.chunk.js","sourcesContent":["const url = 'https://mate-api.herokuapp.com/';\n\nexport const todosFromServer = () => fetch(`${url}todos`)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const usersFromServer = () => fetch(`${url}users`)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { todosFromServer } from '../../api';\n\nexport class TodoList extends React.Component {\n  state = {\n    todos: [],\n    visibleTodos: [],\n    title: '',\n    select: 'all',\n  }\n\n  componentDidMount() {\n    todosFromServer()\n      .then(todos => this.setState({\n        todos,\n        visibleTodos: todos,\n      }));\n  }\n\n  updateTodosInState = () => {\n    this.setState(prevState => (\n      { todos: prevState.visibleTodos.filter(\n        todo => todo.title && todo.title.includes(prevState.title),\n      ) }));\n  }\n\n  filterTodos = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n    this.setState((prevState) => {\n      switch (value) {\n        case 'active':\n          return { todos: prevState.visibleTodos\n            .filter(todo => !todo.completed) };\n        case 'completed':\n          return { todos: prevState.visibleTodos\n            .filter(todo => todo.completed) };\n        default:\n          return { todos: prevState.visibleTodos };\n      }\n    });\n  };\n\n  findMatchedTodos = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n    this.updateTodosInState();\n  };\n\n  render() {\n    const { selectUser } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.findMatchedTodos}\n            placeholder=\"title\"\n          />\n\n          <select\n            type=\"text\"\n            name=\"select\"\n            value={this.state.select}\n            onChange={this.filterTodos}\n          >\n            <option>all</option>\n            <option>active</option>\n            <option>completed</option>\n          </select>\n\n          <ul className=\"TodoList__list\">\n\n            {this.state.todos.map(todo => (\n              <li\n                className={classNames(\n                  'TodoList__item TodoList', {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  },\n                )}\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly checked={todo.completed} />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usersFromServer } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n    users: null,\n  }\n\n  componentDidMount() {\n    usersFromServer()\n      .then((result) => {\n        this.setState({\n          users: result,\n          user: result.filter(person => person.id === this.props.userId),\n        });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.setState(prevState => ({\n        user: prevState.users.filter(person => person.id === this.props.userId),\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {this.props.userId}\n          </span>\n        </h2>\n\n        {this.state.user && (\n          <>\n            <h3 className=\"CurrentUser__name\">{this.state.user[0].name}</h3>\n            <p className=\"CurrentUser__email\">{this.state.user[0].email}</p>\n            <p className=\"CurrentUser__phone\">{this.state.user[0].phone}</p>\n            <button\n              type=\"button\"\n              onClick={this.props.clearUser}\n              className=\"button\"\n            >\n              Clear\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    selectedUserId: 0,\n  };\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  selectUser = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList selectUser={this.selectUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clearUser={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}